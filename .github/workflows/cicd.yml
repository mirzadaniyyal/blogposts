name: Deploy to staging Server

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Add PHPUnit Tests
      - name: PHPUnit Tests Chalayein
        run: phpunit tests/

      # Build PHP Docker image
      - name: Build PHP Docker Image
        run: |
          docker build -t daniyalmirza/blogpost-php:staging -f Dockerfile .
      
      # Build MySQL Docker image
      - name: Build MySQL Docker Image
        run: |
          docker build -t daniyalmirza/blogpost-mysql:staging -f Dockerfile.sql .

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push PHP Docker image to Docker Hub
      - name: Push PHP Docker Image
        run: |
          docker push daniyalmirza/blogpost-php:staging

      # Push MySQL Docker image to Docker Hub
      - name: Push MySQL Docker Image
        run: |
          docker push daniyalmirza/blogpost-mysql:staging

      - name: Stop and remove Docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop mysql blog || true
            docker rm mysql blog || true

      - name: Set up SSH and Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Log in to Docker registry
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
      
            # Pull the Docker image
            docker pull daniyalmirza/blogpost-php:staging
            docker pull daniyalmirza/blogpost-mysql:staging
            # Run the Docker container
            docker run --name mysql -d daniyalmirza/blogpost-mysql:staging
            docker run --name blog -p 80:80 --link mysql:mysql -d daniyalmirza/blogpost-php:staging


